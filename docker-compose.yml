services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    command: bash -c "python main.py"
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: 1
      LANG: C.UTF-8
      PYTHONIOENCODING: utf-8
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G

  support_bot:
    build:
      context: ./support_bot
      dockerfile: Dockerfile
    env_file:
      - ./support_bot/.env
    restart: always

volumes:
  postgres_data: