"""Add is_banned column to User

Revision ID: 740943f4276a
Revises: 
Create Date: 2025-07-19 16:41:05.516447

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '740943f4276a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Update existing 'name' values to JSON format before altering column type
    op.execute("UPDATE tariffs SET name = json_build_object('ru', name) WHERE name::text NOT LIKE '{%:%}'")
    op.alter_column('tariffs', 'name',
               existing_type=sa.VARCHAR(),
               type_=sa.JSON(),
               existing_nullable=False,
               postgresql_using="name::json")
    op.add_column('transactions', sa.Column('payment_details', sa.JSON(), nullable=True))
    op.alter_column('transactions', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
    op.add_column('users', sa.Column('is_banned', sa.Boolean(), server_default='f', nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_banned')
    op.alter_column('transactions', 'id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('transactions', 'payment_details')
    op.alter_column('tariffs', 'name',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    # ### end Alembic commands ###
